on:
  push:
    branches-ignore: 
      - updateREADME
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 8 * * 4'

name: R-CMD-check

jobs:
  ## pre-job to determine if a job has been run for the same SHA (e.g. on a different branch)
  gatekeeper:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}

  versions:
    needs: gatekeeper
   # if: (github.event_name == 'schedule' && github.repository == 'mixOmicsTeam/mixOmics') || (github.event_name != 'schedule' && (needs.gatekeeper.outputs.should_skip == 'false') && !contains(github.event.head_commit.message, 'worksave') && !contains(github.event.head_commit.message, 'skip-ci'))
    runs-on: ubuntu-latest
    outputs:
      r: ${{ steps.setup.outputs.r }}
      bioc: ${{ steps.setup.outputs.bioc }}
      dockerise: ${{ steps.setup.outputs.dockerise }}
      docker_tag: ${{ steps.setup.outputs.docker_tag }}
    steps:
      - uses: rlespinasse/github-slug-action@v3.x
      - uses: r-lib/actions/setup-r@master
      - name: Get R/Bioc versions
        id: setup
        run: |
          mkdir check
          touch check/log
          BRANCH_NAME="${{ env.GITHUB_REF_SLUG }}"
          ## R and Bioc versions
          Rscript -e "install.packages('BiocManager', Ncpus=2)"
          r_devel=$(Rscript -e "vm=BiocManager:::.version_map(); as.character(vm[vm\$BiocStatus == 'devel',]\$R)")
          r_release=$(Rscript -e "vm=BiocManager:::.version_map(); as.character(vm[vm\$BiocStatus == 'release',]\$R)")
          echo r_devel >> check/log
          echo "\n" >> check/log
          echo r_release >> check/log
          if [[ $BRANCH_NAME =~ "release_" ]];
          then
            echo "BRANCH NOT REALSE\n "e >> check/log
            bioc="latest"
            r="$r_release"
            echo "r\n" >> check/log
            echo "bioc\n" >> check/log
          else
            bioc="devel"
            r="$r_devel"
          fi
          echo ::set-output name=r::$r
          echo ::set-output name=bioc::$bioc

          ## Docker
          # Only Dockerise for 'master' or 'RELEASE_*' branches
          dockerise='false'
          [[ github.event_name != 'schedule' && ($BRANCH_NAME == "master" || $BRANCH_NAME =~ "release_") ]] && dockerise='true'
          echo ::set-output name=dockerise::$dockerise
          # Docker tag is 'github' for master and the branch name for release branches
          docker_tag="github"
          [[ $BRANCH_NAME =~ "release_" ]] && docker_tag=$BRANCH_NAME
          echo ::set-output name=docker_tag::$docker_tag
      - name: Upload log ⬆
        if: always()
        uses: actions/upload-artifact@master
        with:
          name:  needslog
          path: gatekeeperlogs

  R-CMD-check:
    needs: [gatekeeper, versions]
    ## run scheduled jobs only on main repo - do not run a duplicate job for merges etc. Do not run if commit messages include any of 'worksave' or 'skip-ci'
    if: (github.event_name == 'schedule' && github.repository == 'mixOmicsTeam/mixOmics') || (github.event_name != 'schedule' && (needs.gatekeeper.outputs.should_skip == 'false') && !contains(github.event.head_commit.message, 'worksave') && !contains(github.event.head_commit.message, 'skip-ci'))
    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.image }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }} - ${{ matrix.config.bioc }} - ${{ matrix.config.image }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # - { os: windows-latest, r: '${{ needs.versions.outputs.r }}', bioc: '${{ needs.versions.outputs.bioc }}'}
          # - { os: macOS-latest, r: '${{ needs.versions.outputs.r }}', bioc: '${{ needs.versions.outputs.bioc }}'}
          - { os: ubuntu-latest, r: '${{ needs.versions.outputs.r }}', image: 'bioconductor/bioconductor_docker:${{ needs.versions.outputs.bioc }}'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: write
        run: |
          mkdir check
          touch check/log
          echo ${{ needs.versions.outputs.r }} >> check/log
          echo ${{ needs.versions.outputs.bioc }} >> check/log

      - name: Upload check results ⬆️
        if: always()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
